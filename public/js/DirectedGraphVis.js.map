{"mappings":"C,A,S,C,C,C,C,C,C,C,C,C,E,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,A,Y,O,C,C,E,E,C,C,E,C,E,E,K,E,C,E,E,A,a,O,Q,A,Y,O,O,O,E,O,O,C,I,C,Q,S,E,C,C,C,E,G,C,C,C,E,C,C,G,C,C,C,E,C,C,I,E,A,Y,O,C,C,E,E,C,C,E,C,G,C,G,E,O,E,E,C,G,G,E,O,E,E,C,G,G,G,A,U,O,E,O,E,G,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,O,C,S,C,E,I,E,C,C,E,C,E,C,E,C,O,A,M,E,E,C,E,E,K,C,C,E,I,E,C,C,E,C,I,E,M,C,G,C,C,E,C,E,C,I,C,E,O,C,E,E,E,O,C,E,C,O,C,C,E,C,O,C,S,E,C,E,I,E,E,O,C,G,M,A,C,I,E,C,E,E,E,C,C,E,e,C,C,E,E,M,C,S,C,E,I,C,E,C,E,I,C,M,C,E,I,C,O,C,C,C,E,E,O,C,E,E,K,C,E,E,M,C,E,E,Q,C,S,C,C,C,E,C,C,E,C,C,S,C,C,C,E,E,O,C,C,E,C,E,A,E,O,c,C,E,O,C,I,W,O,C,C,E,A,C,G,C,C,E,C,E,I,I,E,E,E,E,M,C,I,E,C,C,E,E,G,E,C,I,E,E,E,A,C,U,O,S,A,a,O,O,O,O,C,E,Y,O,Q,O,G,E,O,W,O,C,E,C,E,C,M,C,S,C,C,C,C,C,C,C,E,A,E,kD,iB,C,GCKA,IAAM,EAAQ,GAAI,AAFlB,CAAA,EAAA,aAAA,EAEkB,aAAa,AAC/B,CAAA,OAAO,KAAK,CAAG,EAAM,KAAK,CAAC,IAAI,CAAC,GAChC,OAAO,IAAI,CAAG,EAAM,IAAI,CAAC,IAAI,CAAC,GAC9B,OAAO,UAAU,CAAG,EAAM,UAAU,CAAC,IAAI,CAAC,GAC1C,OAAO,aAAa,CAAG,EAAM,aAAa,CAAC,IAAI,CAAC,GAChD,OAAO,aAAa,CAAG,EAAM,aAAa,CAAC,IAAI,CAAC,GAEhD,EAAE,UAAU,KAAK,CAAC,WAChB,EAAE,QAAQ,KAAK,CAAC,IAAM,EAAM,WAAW,IACvC,EAAE,iBAAiB,MAAM,CAAC,IAAM,EAAM,YAAY,GACpD,E,E,C,a,Q,iD,O,E,C,M,C,S,C,C,C,C,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","sources":["<anon>","rescript/DirectedGraphVis.js","rescript/Graph.js","rescript/ColorCode.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","rescript/DrawUtil.js","rescript/P5.js"],"sourcesContent":["// modules are defined as an array\n// [ module function, map of requires ]\n//\n// map of requires is short require name -> numeric require\n//\n// anything defined in a previous bundle is accessed via the\n// orig method which is the require for previous bundles\n\n(function (modules, entry, mainEntry, parcelRequireName, globalName) {\n  /* eslint-disable no-undef */\n  var globalObject =\n    typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n      ? self\n      : typeof window !== 'undefined'\n      ? window\n      : typeof global !== 'undefined'\n      ? global\n      : {};\n  /* eslint-enable no-undef */\n\n  // Save the require from previous bundle to this closure if any\n  var previousRequire =\n    typeof globalObject[parcelRequireName] === 'function' &&\n    globalObject[parcelRequireName];\n\n  var cache = previousRequire.cache || {};\n  // Do not use `require` to prevent Webpack from trying to bundle this call\n  var nodeRequire =\n    typeof module !== 'undefined' &&\n    typeof module.require === 'function' &&\n    module.require.bind(module);\n\n  function newRequire(name, jumped) {\n    if (!cache[name]) {\n      if (!modules[name]) {\n        // if we cannot find the module within our internal map or\n        // cache jump to the current global require ie. the last bundle\n        // that was added to the page.\n        var currentRequire =\n          typeof globalObject[parcelRequireName] === 'function' &&\n          globalObject[parcelRequireName];\n        if (!jumped && currentRequire) {\n          return currentRequire(name, true);\n        }\n\n        // If there are other bundles on this page the require from the\n        // previous one is saved to 'previousRequire'. Repeat this as\n        // many times as there are bundles until the module is found or\n        // we exhaust the require chain.\n        if (previousRequire) {\n          return previousRequire(name, true);\n        }\n\n        // Try the node require function if it exists.\n        if (nodeRequire && typeof name === 'string') {\n          return nodeRequire(name);\n        }\n\n        var err = new Error(\"Cannot find module '\" + name + \"'\");\n        err.code = 'MODULE_NOT_FOUND';\n        throw err;\n      }\n\n      localRequire.resolve = resolve;\n      localRequire.cache = {};\n\n      var module = (cache[name] = new newRequire.Module(name));\n\n      modules[name][0].call(\n        module.exports,\n        localRequire,\n        module,\n        module.exports,\n        globalObject\n      );\n    }\n\n    return cache[name].exports;\n\n    function localRequire(x) {\n      var res = localRequire.resolve(x);\n      return res === false ? {} : newRequire(res);\n    }\n\n    function resolve(x) {\n      var id = modules[name][1][x];\n      return id != null ? id : x;\n    }\n  }\n\n  function Module(moduleName) {\n    this.id = moduleName;\n    this.bundle = newRequire;\n    this.exports = {};\n  }\n\n  newRequire.isParcelRequire = true;\n  newRequire.Module = Module;\n  newRequire.modules = modules;\n  newRequire.cache = cache;\n  newRequire.parent = previousRequire;\n  newRequire.register = function (id, exports) {\n    modules[id] = [\n      function (require, module) {\n        module.exports = exports;\n      },\n      {},\n    ];\n  };\n\n  Object.defineProperty(newRequire, 'root', {\n    get: function () {\n      return globalObject[parcelRequireName];\n    },\n  });\n\n  globalObject[parcelRequireName] = newRequire;\n\n  for (var i = 0; i < entry.length; i++) {\n    newRequire(entry[i]);\n  }\n\n  if (mainEntry) {\n    // Expose entry point to Node, AMD or browser globals\n    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js\n    var mainExports = newRequire(mainEntry);\n\n    // CommonJS\n    if (typeof exports === 'object' && typeof module !== 'undefined') {\n      module.exports = mainExports;\n\n      // RequireJS\n    } else if (typeof define === 'function' && define.amd) {\n      define(function () {\n        return mainExports;\n      });\n\n      // <script>\n    } else if (globalName) {\n      this[globalName] = mainExports;\n    }\n  }\n})({\"aD9It\":[function(require,module,exports,__globalThis) {\n// Generated by ReScript, PLEASE EDIT WITH CARE\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nvar _graphJs = require(\"./Graph.js\");\nconst graph = new (0, _graphJs.DirectedGraph)();\nwindow.setup = graph.setup.bind(graph);\nwindow.draw = graph.draw.bind(graph);\nwindow.mouseMoved = graph.mouseMoved.bind(graph);\nwindow.mouseReleased = graph.mouseReleased.bind(graph);\nwindow.matrix_change = graph.matrix_change.bind(graph);\n$(document).ready(function() {\n    $('#add').click(()=>graph.change_mode());\n    $('#graph-select').change(()=>graph.graph_select());\n});\n /*  Not a pure module */ \n},{\"./Graph.js\":\"fmzMd\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jBTt3\"}],\"fmzMd\":[function(require,module,exports,__globalThis) {\n// Generated by ReScript, PLEASE EDIT WITH CARE\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"Graph\", ()=>Graph);\nparcelHelpers.export(exports, \"DirectedGraph\", ()=>DirectedGraph);\nparcelHelpers.export(exports, \"UndirectedGraph\", ()=>UndirectedGraph);\nvar _colorCodeJs = require(\"./ColorCode.js\");\nvar _drawUtilJs = require(\"./DrawUtil.js\");\nconst text_size = 24;\nconst canvas_w = 1000;\nconst canvas_h = 1000;\nclass V {\n    constructor(){\n        this.node_r = 25;\n        this.nodes = [];\n    }\n    draw_node(node) {\n        drawingContext.setLineDash([]);\n        const node_d = this.node_r * 2;\n        strokeWeight(2);\n        stroke.apply(null, (0, _colorCodeJs.black));\n        fill.apply(null, node.color);\n        ellipse(node.x, node.y, node_d, node_d);\n        textAlign(CENTER, CENTER);\n        fill(0);\n        textSize(text_size);\n        text(node.label, node.x, node.y);\n    }\n    make(label, x, y, color = (0, _colorCodeJs.white)) {\n        return {\n            label: label,\n            x: x,\n            y: y,\n            color: color\n        };\n    }\n    add(...args) {\n        const v = this.make.apply(this, args);\n        this.nodes.push(v);\n    }\n    modify(v, new_v) {\n        this.nodes = this.nodes.map((u)=>u == v ? new_v : u);\n    }\n    get(i) {\n        return this.nodes[i];\n    }\n    get_index(label) {\n        return this.nodes.findIndex((x)=>x.label == label);\n    }\n    get_node_from_canvas(px, py) {\n        return this.nodes.find((v)=>(0, _drawUtilJs.calc_dist)(px, py, v.x, v.y) <= this.node_r);\n    }\n    get_nodes() {\n        return this.nodes;\n    }\n    get_labels() {\n        return this.nodes.map((v)=>v.label);\n    }\n    get_size() {\n        return this.nodes.length;\n    }\n    draw() {\n        this.nodes.forEach(this.draw_node, this);\n    }\n}\nclass E {\n    constructor(V, directed){\n        this.V = V;\n        this.edges = [];\n        this.directed = directed;\n    }\n    draw_arrow_head(x1, y1, x2, y2, color) {\n        strokeWeight(2);\n        fill.apply(null, color);\n        stroke.apply(null, color);\n        const [ax, ay] = (0, _drawUtilJs.calc_edge_point)(x2, y2, x1, y1, x2, y2, 10);\n        const [bx, by] = (0, _drawUtilJs.rotation)(x2, y2, ax, ay, Math.PI / 8);\n        const [cx, cy] = (0, _drawUtilJs.rotation)(x2, y2, ax, ay, -Math.PI / 8);\n        triangle(x2, y2, bx, by, cx, cy);\n    }\n    draw_arrow(x1, y1, x2, y2, color) {\n        strokeWeight(2);\n        fill.apply(null, color);\n        stroke.apply(null, color);\n        line(x1, y1, x2, y2);\n        if (this.directed) this.draw_arrow_head(x1, y1, x2, y2, color);\n    }\n    draw_curve_arrow(x1, y1, x2, y2, control_x, control_y, color) {\n        strokeWeight(2);\n        noFill();\n        stroke.apply(null, color);\n        bezier(x1, y1, control_x, control_y, control_x, control_y, x2, y2);\n        this.draw_arrow_head(control_x, control_y, x2, y2, color);\n    }\n    draw_label(label, x, y) {\n        textAlign(CENTER, CENTER);\n        fill(0);\n        stroke.apply(null, (0, _colorCodeJs.white));\n        strokeWeight(5);\n        textSize(text_size);\n        text(label, x, y);\n    }\n    draw_edge(edge) {\n        if (edge.weight == 0) return;\n        drawingContext.setLineDash(edge.dashed ? [\n            5\n        ] : []);\n        const [n1, n2] = [\n            this.V.get(edge.from),\n            this.V.get(edge.to)\n        ];\n        const [x1, y1] = [\n            n1.x,\n            n1.y\n        ];\n        const [x2, y2] = [\n            n2.x,\n            n2.y\n        ];\n        const [mx, my] = [\n            (x1 + x2) / 2,\n            (y1 + y2) / 2\n        ];\n        const r = this.V.node_r * 1.4;\n        const [px, py] = (0, _drawUtilJs.calc_edge_point)(x1, y1, x2, y2, x1, y1, r);\n        const [qx, qy] = (0, _drawUtilJs.calc_edge_point)(x2, y2, x1, y1, x2, y2, r);\n        const inv_e = this.get(edge.to, edge.from);\n        if (this.directed && inv_e) {\n            const vec = [\n                x2 - x1,\n                y2 - y1\n            ];\n            const dist = Math.sqrt(vec[0] * vec[0] + vec[1] * vec[1]);\n            const n_vec = [\n                vec[0] / dist,\n                vec[1] / dist\n            ];\n            const dv = [\n                -n_vec[1] * r,\n                n_vec[0] * r\n            ];\n            const [rx, ry] = [\n                mx + dv[0],\n                my + dv[1]\n            ];\n            const [px2, py2] = [\n                px + 0.25 * dv[0],\n                py + 0.25 * dv[1]\n            ];\n            const [qx2, qy2] = [\n                qx + 0.25 * dv[0],\n                qy + 0.25 * dv[1]\n            ];\n            this.draw_curve_arrow(px2, py2, qx2, qy2, rx, ry, edge.color);\n            this.draw_label(edge.weight, rx, ry);\n        } else {\n            this.draw_arrow(px, py, qx, qy, edge.color);\n            this.draw_label(edge.weight, mx, my);\n        }\n    }\n    get0(from, to) {\n        if (typeof from == 'number') return this.get_edges().find((e)=>e.from == from && e.to == to);\n        return this.get_edges().find((e)=>this.V.get(e.from) == from && this.V.get(e.to) == to);\n    }\n    get(from, to) {\n        if (this.directed) return this.get0(from, to);\n        else {\n            const u = this.get0(from, to);\n            return u ? u : this.get0(to, from);\n        }\n    }\n    get_edges() {\n        return this.edges.filter((e)=>e.weight != 0);\n    }\n    draw() {\n        this.edges.forEach(this.draw_edge, this);\n    }\n    make(from_label, to_label, w) {\n        return {\n            from: this.V.get_index(from_label),\n            to: this.V.get_index(to_label),\n            weight: w,\n            color: (0, _colorCodeJs.black),\n            dashed: false\n        };\n    }\n    add(...args) {\n        const e = this.make.apply(this, args);\n        this.edges.push(e);\n    }\n    modify(u, v, new_e) {\n        const check = (idx, target)=>this.V.get(idx) == target;\n        this.edges = this.edges.map((e)=>check(e.from, u) && check(e.to, v) ? new_e : e);\n    }\n    get_html(i, j) {\n        if (i == j) return '<td>0</td>';\n        else if (this.directed || i < j) {\n            const e = this.get(i, j);\n            return '<td><input class=\"alg-input\" type=\"number\" onchange=\"matrix_change(' + String(i) + ',' + String(j) + ',this.value)\" type=\"text\" value=\"' + String(e ? e.weight : 0) + '\"></td>';\n        } else {\n            const inv_e = this.get(j, i);\n            return '<td>' + String(inv_e ? inv_e.weight : 0) + '</td>';\n        }\n    }\n}\nclass Graph {\n    static normal_mode = 0;\n    static add_mode = 1;\n    static edit_mode = 2;\n    constructor(directed = true){\n        this.V = new V();\n        this.E = new E(this.V, directed);\n        this.mode = Graph.normal_mode;\n        this.edit_mode = null;\n    }\n    graph_reset() {\n        this.V.nodes = [];\n        this.E.edges = [];\n    }\n    matrix_change(i, j, val) {\n        const [u, v] = [\n            this.V.get(i),\n            this.V.get(j)\n        ];\n        const e = this.E.get(i, j);\n        const w = parseInt(val);\n        if (e) {\n            const new_e = this.E.make(u.label, v.label, w);\n            this.E.modify(u, v, new_e);\n        } else this.E.add(u.label, v.label, w);\n        this.refresh();\n    }\n    matrix_refresh() {\n        $('#matrix_tbl').empty().append($('<thead>'), $('<tbody>'));\n        $('#matrix_tbl thead').append([\n            '<tr>',\n            '<td class=\"gray\"></td>',\n            this.V.get_labels().map((x)=>'<td class=\"gray text-center\">' + x + '</td>').join(\"\"),\n            '</tr>'\n        ].join(''));\n        for(let i = 0; i < this.V.get_size(); i++){\n            const u = this.V.get(i);\n            $('#matrix_tbl tbody').append([\n                '<tr>',\n                '<td class=\"gray\">' + u.label + '</td>',\n                Array.from(Array(this.V.get_size())).map((function(_, j) {\n                    return this.E.get_html(i, j);\n                }).bind(this)).join(''),\n                '</tr>'\n            ].join(''));\n        }\n    // this.debug_output();\n    }\n    debug_output() {\n        console.log('----');\n        const v_logs = [];\n        const e_logs = [];\n        for (const v of this.V.get_nodes())v_logs.push('[' + [\n            '\"' + v.label + '\"',\n            parseInt(v.x),\n            parseInt(v.y)\n        ].join(', ') + ']');\n        for (const e of this.E.get_edges()){\n            const u = this.V.get(e.from);\n            const v = this.V.get(e.to);\n            e_logs.push('[' + [\n                '\"' + u.label + '\"',\n                '\"' + v.label + '\"',\n                e.weight\n            ].join(', ') + ']');\n        }\n        console.log(v_logs.join(',\\n'));\n        console.log(e_logs.join(',\\n'));\n    }\n    refresh() {\n        this.matrix_refresh();\n        redraw();\n    }\n    change_mode(mode = Graph.add_mode) {\n        if (mode == Graph.add_mode && $('#node_label').val() == '') alert(\"\\u30A8\\u30E9\\u30FC: \\u9802\\u70B9\\u540D\\u304C\\u7A7A\\u3067\\u3059\");\n        else {\n            this.mode = mode;\n            this.refresh();\n        }\n    }\n    draw() {\n        background(this.mode == Graph.add_mode || this.mode == Graph.edit_mode ? (0, _colorCodeJs.gray) : (0, _colorCodeJs.lightGray));\n        this.V.draw();\n        this.E.draw();\n        if (this.mode == Graph.add_mode || this.mode == Graph.edit_mode) {\n            strokeWeight(2);\n            stroke.apply(null, (0, _colorCodeJs.black));\n            drawingContext.setLineDash([\n                10,\n                10\n            ]);\n            line(mouseX, 0, mouseX, canvas_h);\n            line(0, mouseY, canvas_w, mouseY);\n            const label = this.mode == Graph.add_mode ? $('#node_label').val() : this.editing_node.label;\n            this.V.draw_node(this.V.make(label, mouseX, mouseY, (0, _colorCodeJs.orange)));\n        }\n    }\n    setup() {\n        const canvas = createCanvas(canvas_w, canvas_h);\n        canvas.parent('canvas-hole');\n        noLoop();\n    }\n    mouseMoved() {\n        if (this.mode == Graph.add_mode || this.mode == Graph.edit_mode) redraw();\n    }\n    mouseReleased() {\n        if (this.mode == Graph.add_mode) {\n            const label = $('#node_label').val();\n            this.V.add(label, mouseX, mouseY);\n            $('#node_label').val('');\n            this.change_mode(Graph.normal_mode);\n        } else if (this.mode == Graph.edit_mode) {\n            this.editing_node.x = mouseX;\n            this.editing_node.y = mouseY;\n            this.editing_node = null;\n            this.change_mode(Graph.normal_mode);\n        } else {\n            const v = this.V.get_node_from_canvas(mouseX, mouseY);\n            if (v) {\n                this.editing_node = v;\n                this.change_mode(Graph.edit_mode);\n            }\n        }\n    }\n}\nclass DirectedGraph extends Graph {\n    constructor(){\n        super(true);\n    }\n    load_sample(id) {\n        this.graph_reset();\n        if (id == 1) {\n            [\n                [\n                    \"A\",\n                    97,\n                    493\n                ],\n                [\n                    \"B\",\n                    258,\n                    351\n                ],\n                [\n                    \"C\",\n                    334,\n                    593\n                ],\n                [\n                    \"D\",\n                    615,\n                    354\n                ],\n                [\n                    \"E\",\n                    521,\n                    572\n                ],\n                [\n                    \"F\",\n                    802,\n                    503\n                ]\n            ].map((v)=>this.V.add.apply(this.V, v));\n            [\n                [\n                    \"A\",\n                    \"B\",\n                    3\n                ],\n                [\n                    \"A\",\n                    \"C\",\n                    5\n                ],\n                [\n                    \"B\",\n                    \"C\",\n                    4\n                ],\n                [\n                    \"B\",\n                    \"D\",\n                    13\n                ],\n                [\n                    \"C\",\n                    \"E\",\n                    4\n                ],\n                [\n                    \"C\",\n                    \"D\",\n                    9\n                ],\n                [\n                    \"D\",\n                    \"F\",\n                    2\n                ],\n                [\n                    \"E\",\n                    \"D\",\n                    7\n                ],\n                [\n                    \"E\",\n                    \"F\",\n                    8\n                ]\n            ].map((v)=>this.E.add.apply(this.E, v));\n        } else if (id == 2) {\n            [\n                [\n                    \"A\",\n                    110,\n                    500\n                ],\n                [\n                    \"B\",\n                    240,\n                    340\n                ],\n                [\n                    \"C\",\n                    240,\n                    650\n                ],\n                [\n                    \"D\",\n                    480,\n                    340\n                ],\n                [\n                    \"E\",\n                    480,\n                    500\n                ],\n                [\n                    \"F\",\n                    480,\n                    650\n                ],\n                [\n                    \"G\",\n                    710,\n                    340\n                ],\n                [\n                    \"H\",\n                    710,\n                    650\n                ],\n                [\n                    \"I\",\n                    880,\n                    500\n                ]\n            ].map((v)=>this.V.add.apply(this.V, v));\n            [\n                [\n                    \"A\",\n                    \"B\",\n                    4\n                ],\n                [\n                    \"A\",\n                    \"C\",\n                    8\n                ],\n                [\n                    \"B\",\n                    \"C\",\n                    11\n                ],\n                [\n                    \"B\",\n                    \"D\",\n                    8\n                ],\n                [\n                    \"C\",\n                    \"E\",\n                    7\n                ],\n                [\n                    \"D\",\n                    \"E\",\n                    2\n                ],\n                [\n                    \"D\",\n                    \"H\",\n                    4\n                ],\n                [\n                    \"D\",\n                    \"G\",\n                    7\n                ],\n                [\n                    \"E\",\n                    \"F\",\n                    6\n                ],\n                [\n                    \"C\",\n                    \"F\",\n                    1\n                ],\n                [\n                    \"F\",\n                    \"H\",\n                    2\n                ],\n                [\n                    \"G\",\n                    \"H\",\n                    14\n                ],\n                [\n                    \"G\",\n                    \"I\",\n                    9\n                ],\n                [\n                    \"H\",\n                    \"I\",\n                    10\n                ]\n            ].map((v)=>this.E.add.apply(this.E, v));\n        } else if (id == 3) {\n            [\n                [\n                    \"A\",\n                    480,\n                    290\n                ],\n                [\n                    \"B\",\n                    212,\n                    450\n                ],\n                [\n                    \"C\",\n                    480,\n                    450\n                ],\n                [\n                    \"D\",\n                    777,\n                    450\n                ],\n                [\n                    \"E\",\n                    148,\n                    620\n                ],\n                [\n                    \"F\",\n                    265,\n                    620\n                ],\n                [\n                    \"G\",\n                    411,\n                    620\n                ],\n                [\n                    \"H\",\n                    559,\n                    620\n                ],\n                [\n                    \"I\",\n                    727,\n                    620\n                ],\n                [\n                    \"J\",\n                    850,\n                    620\n                ],\n                [\n                    \"K\",\n                    315,\n                    780\n                ],\n                [\n                    \"L\",\n                    445,\n                    780\n                ],\n                [\n                    \"M\",\n                    523,\n                    780\n                ],\n                [\n                    \"N\",\n                    635,\n                    780\n                ],\n                [\n                    \"O\",\n                    850,\n                    780\n                ]\n            ].map((v)=>this.V.add.apply(this.V, v));\n            [\n                [\n                    \"A\",\n                    \"B\",\n                    1\n                ],\n                [\n                    \"A\",\n                    \"C\",\n                    1\n                ],\n                [\n                    \"A\",\n                    \"D\",\n                    1\n                ],\n                [\n                    \"B\",\n                    \"E\",\n                    1\n                ],\n                [\n                    \"B\",\n                    \"F\",\n                    1\n                ],\n                [\n                    \"C\",\n                    \"G\",\n                    1\n                ],\n                [\n                    \"C\",\n                    \"H\",\n                    1\n                ],\n                [\n                    \"D\",\n                    \"I\",\n                    1\n                ],\n                [\n                    \"D\",\n                    \"J\",\n                    1\n                ],\n                [\n                    \"G\",\n                    \"K\",\n                    1\n                ],\n                [\n                    \"G\",\n                    \"L\",\n                    1\n                ],\n                [\n                    \"H\",\n                    \"M\",\n                    1\n                ],\n                [\n                    \"H\",\n                    \"N\",\n                    1\n                ],\n                [\n                    \"J\",\n                    \"O\",\n                    1\n                ]\n            ].map((v)=>this.E.add.apply(this.E, v));\n        } else if (id == 4) {\n            [\n                [\n                    \"00\",\n                    150,\n                    275\n                ],\n                [\n                    \"10\",\n                    150,\n                    425\n                ],\n                [\n                    \"20\",\n                    150,\n                    575\n                ],\n                [\n                    \"30\",\n                    150,\n                    725\n                ],\n                [\n                    \"40\",\n                    150,\n                    875\n                ],\n                [\n                    \"01\",\n                    300,\n                    275\n                ],\n                [\n                    \"11\",\n                    300,\n                    425\n                ],\n                [\n                    \"21\",\n                    300,\n                    575\n                ],\n                [\n                    \"31\",\n                    300,\n                    725\n                ],\n                [\n                    \"41\",\n                    300,\n                    875\n                ],\n                [\n                    \"02\",\n                    450,\n                    275\n                ],\n                [\n                    \"12\",\n                    450,\n                    425\n                ],\n                [\n                    \"22\",\n                    450,\n                    575\n                ],\n                [\n                    \"32\",\n                    450,\n                    725\n                ],\n                [\n                    \"42\",\n                    450,\n                    875\n                ],\n                [\n                    \"03\",\n                    600,\n                    275\n                ],\n                [\n                    \"13\",\n                    600,\n                    425\n                ],\n                [\n                    \"23\",\n                    600,\n                    575\n                ],\n                [\n                    \"33\",\n                    600,\n                    725\n                ],\n                [\n                    \"43\",\n                    600,\n                    875\n                ],\n                [\n                    \"04\",\n                    750,\n                    275\n                ],\n                [\n                    \"14\",\n                    750,\n                    425\n                ],\n                [\n                    \"24\",\n                    750,\n                    575\n                ],\n                [\n                    \"34\",\n                    750,\n                    725\n                ],\n                [\n                    \"44\",\n                    750,\n                    875\n                ]\n            ].map((v)=>this.V.add.apply(this.V, v));\n            [\n                [\n                    \"00\",\n                    \"01\",\n                    1\n                ],\n                [\n                    \"01\",\n                    \"00\",\n                    1\n                ],\n                [\n                    \"00\",\n                    \"10\",\n                    1\n                ],\n                [\n                    \"10\",\n                    \"00\",\n                    1\n                ],\n                [\n                    \"00\",\n                    \"10\",\n                    1\n                ],\n                [\n                    \"10\",\n                    \"00\",\n                    1\n                ],\n                [\n                    \"01\",\n                    \"02\",\n                    1\n                ],\n                [\n                    \"02\",\n                    \"01\",\n                    1\n                ],\n                [\n                    \"02\",\n                    \"12\",\n                    1\n                ],\n                [\n                    \"12\",\n                    \"02\",\n                    1\n                ],\n                [\n                    \"02\",\n                    \"12\",\n                    1\n                ],\n                [\n                    \"12\",\n                    \"02\",\n                    1\n                ],\n                [\n                    \"04\",\n                    \"14\",\n                    1\n                ],\n                [\n                    \"14\",\n                    \"04\",\n                    1\n                ],\n                [\n                    \"04\",\n                    \"14\",\n                    1\n                ],\n                [\n                    \"14\",\n                    \"04\",\n                    1\n                ],\n                [\n                    \"10\",\n                    \"20\",\n                    1\n                ],\n                [\n                    \"20\",\n                    \"10\",\n                    1\n                ],\n                [\n                    \"10\",\n                    \"20\",\n                    1\n                ],\n                [\n                    \"20\",\n                    \"10\",\n                    1\n                ],\n                [\n                    \"12\",\n                    \"13\",\n                    1\n                ],\n                [\n                    \"13\",\n                    \"12\",\n                    1\n                ],\n                [\n                    \"12\",\n                    \"22\",\n                    1\n                ],\n                [\n                    \"22\",\n                    \"12\",\n                    1\n                ],\n                [\n                    \"12\",\n                    \"22\",\n                    1\n                ],\n                [\n                    \"22\",\n                    \"12\",\n                    1\n                ],\n                [\n                    \"13\",\n                    \"14\",\n                    1\n                ],\n                [\n                    \"14\",\n                    \"13\",\n                    1\n                ],\n                [\n                    \"14\",\n                    \"24\",\n                    1\n                ],\n                [\n                    \"24\",\n                    \"14\",\n                    1\n                ],\n                [\n                    \"14\",\n                    \"24\",\n                    1\n                ],\n                [\n                    \"24\",\n                    \"14\",\n                    1\n                ],\n                [\n                    \"20\",\n                    \"30\",\n                    1\n                ],\n                [\n                    \"30\",\n                    \"20\",\n                    1\n                ],\n                [\n                    \"20\",\n                    \"30\",\n                    1\n                ],\n                [\n                    \"30\",\n                    \"20\",\n                    1\n                ],\n                [\n                    \"22\",\n                    \"32\",\n                    1\n                ],\n                [\n                    \"32\",\n                    \"22\",\n                    1\n                ],\n                [\n                    \"22\",\n                    \"32\",\n                    1\n                ],\n                [\n                    \"32\",\n                    \"22\",\n                    1\n                ],\n                [\n                    \"24\",\n                    \"34\",\n                    1\n                ],\n                [\n                    \"34\",\n                    \"24\",\n                    1\n                ],\n                [\n                    \"24\",\n                    \"34\",\n                    1\n                ],\n                [\n                    \"34\",\n                    \"24\",\n                    1\n                ],\n                [\n                    \"30\",\n                    \"40\",\n                    1\n                ],\n                [\n                    \"40\",\n                    \"30\",\n                    1\n                ],\n                [\n                    \"30\",\n                    \"40\",\n                    1\n                ],\n                [\n                    \"40\",\n                    \"30\",\n                    1\n                ],\n                [\n                    \"32\",\n                    \"33\",\n                    1\n                ],\n                [\n                    \"33\",\n                    \"32\",\n                    1\n                ],\n                [\n                    \"32\",\n                    \"42\",\n                    1\n                ],\n                [\n                    \"42\",\n                    \"32\",\n                    1\n                ],\n                [\n                    \"32\",\n                    \"42\",\n                    1\n                ],\n                [\n                    \"42\",\n                    \"32\",\n                    1\n                ],\n                [\n                    \"33\",\n                    \"34\",\n                    1\n                ],\n                [\n                    \"34\",\n                    \"33\",\n                    1\n                ],\n                [\n                    \"33\",\n                    \"43\",\n                    1\n                ],\n                [\n                    \"43\",\n                    \"33\",\n                    1\n                ],\n                [\n                    \"33\",\n                    \"43\",\n                    1\n                ],\n                [\n                    \"43\",\n                    \"33\",\n                    1\n                ],\n                [\n                    \"34\",\n                    \"44\",\n                    1\n                ],\n                [\n                    \"44\",\n                    \"34\",\n                    1\n                ],\n                [\n                    \"34\",\n                    \"44\",\n                    1\n                ],\n                [\n                    \"44\",\n                    \"34\",\n                    1\n                ],\n                [\n                    \"40\",\n                    \"41\",\n                    1\n                ],\n                [\n                    \"41\",\n                    \"40\",\n                    1\n                ],\n                [\n                    \"41\",\n                    \"42\",\n                    1\n                ],\n                [\n                    \"42\",\n                    \"41\",\n                    1\n                ],\n                [\n                    \"42\",\n                    \"43\",\n                    1\n                ],\n                [\n                    \"43\",\n                    \"42\",\n                    1\n                ],\n                [\n                    \"43\",\n                    \"44\",\n                    1\n                ],\n                [\n                    \"44\",\n                    \"43\",\n                    1\n                ]\n            ].map((v)=>this.E.add.apply(this.E, v));\n        }\n        this.refresh();\n    }\n    graph_select() {\n        const id = parseInt($('#graph-select').val());\n        this.load_sample(id);\n    }\n}\nclass UndirectedGraph extends Graph {\n    constructor(){\n        super(false);\n    }\n    is_connected() {\n        const g = this;\n        const visitted = new Set();\n        function dfs(i) {\n            visitted.add(i);\n            for(let j = 0; j < g.V.get_size(); j++)if (!visitted.has(j) && g.E.get(i, j)) dfs(j);\n        }\n        dfs(0);\n        return this.V.get_size() == visitted.size;\n    }\n    load_sample(id) {\n        this.graph_reset();\n        if (id == 1) {\n            [\n                [\n                    \"0\",\n                    669,\n                    458\n                ],\n                [\n                    \"1\",\n                    309,\n                    508\n                ],\n                [\n                    \"2\",\n                    464,\n                    227\n                ],\n                [\n                    \"3\",\n                    512,\n                    508\n                ],\n                [\n                    \"4\",\n                    162,\n                    361\n                ],\n                [\n                    \"5\",\n                    829,\n                    338\n                ],\n                [\n                    \"6\",\n                    361,\n                    387\n                ],\n                [\n                    \"7\",\n                    536,\n                    388\n                ]\n            ].map((v)=>this.V.add.apply(this.V, v));\n            [\n                [\n                    \"0\",\n                    \"3\",\n                    5\n                ],\n                [\n                    \"0\",\n                    \"5\",\n                    6\n                ],\n                [\n                    \"0\",\n                    \"7\",\n                    3\n                ],\n                [\n                    \"1\",\n                    \"3\",\n                    8\n                ],\n                [\n                    \"1\",\n                    \"6\",\n                    3\n                ],\n                [\n                    \"1\",\n                    \"4\",\n                    4\n                ],\n                [\n                    \"2\",\n                    \"4\",\n                    9\n                ],\n                [\n                    \"2\",\n                    \"5\",\n                    10\n                ],\n                [\n                    \"2\",\n                    \"7\",\n                    5\n                ],\n                [\n                    \"3\",\n                    \"7\",\n                    6\n                ],\n                [\n                    \"4\",\n                    \"6\",\n                    2\n                ],\n                [\n                    \"6\",\n                    \"7\",\n                    7\n                ]\n            ].map((v)=>this.E.add.apply(this.E, v));\n        } else if (id == 2) {\n            [\n                [\n                    \"A\",\n                    110,\n                    340\n                ],\n                [\n                    \"B\",\n                    240,\n                    180\n                ],\n                [\n                    \"C\",\n                    240,\n                    490\n                ],\n                [\n                    \"D\",\n                    480,\n                    180\n                ],\n                [\n                    \"E\",\n                    480,\n                    340\n                ],\n                [\n                    \"F\",\n                    480,\n                    490\n                ],\n                [\n                    \"G\",\n                    710,\n                    180\n                ],\n                [\n                    \"H\",\n                    710,\n                    490\n                ],\n                [\n                    \"I\",\n                    880,\n                    340\n                ]\n            ].map((v)=>this.V.add.apply(this.V, v));\n            [\n                [\n                    \"A\",\n                    \"B\",\n                    4\n                ],\n                [\n                    \"A\",\n                    \"C\",\n                    8\n                ],\n                [\n                    \"B\",\n                    \"C\",\n                    11\n                ],\n                [\n                    \"B\",\n                    \"D\",\n                    8\n                ],\n                [\n                    \"C\",\n                    \"E\",\n                    7\n                ],\n                [\n                    \"D\",\n                    \"E\",\n                    2\n                ],\n                [\n                    \"D\",\n                    \"H\",\n                    4\n                ],\n                [\n                    \"D\",\n                    \"G\",\n                    7\n                ],\n                [\n                    \"E\",\n                    \"F\",\n                    6\n                ],\n                [\n                    \"C\",\n                    \"F\",\n                    1\n                ],\n                [\n                    \"F\",\n                    \"H\",\n                    2\n                ],\n                [\n                    \"G\",\n                    \"H\",\n                    14\n                ],\n                [\n                    \"G\",\n                    \"I\",\n                    9\n                ],\n                [\n                    \"H\",\n                    \"I\",\n                    10\n                ]\n            ].map((v)=>this.E.add.apply(this.E, v));\n        } else if (id == 3) {\n            [\n                [\n                    \"A\",\n                    480,\n                    90\n                ],\n                [\n                    \"B\",\n                    212,\n                    250\n                ],\n                [\n                    \"C\",\n                    480,\n                    250\n                ],\n                [\n                    \"D\",\n                    777,\n                    250\n                ],\n                [\n                    \"E\",\n                    148,\n                    420\n                ],\n                [\n                    \"F\",\n                    265,\n                    420\n                ],\n                [\n                    \"G\",\n                    411,\n                    420\n                ],\n                [\n                    \"H\",\n                    559,\n                    420\n                ],\n                [\n                    \"I\",\n                    727,\n                    420\n                ],\n                [\n                    \"J\",\n                    850,\n                    420\n                ],\n                [\n                    \"K\",\n                    315,\n                    580\n                ],\n                [\n                    \"L\",\n                    445,\n                    580\n                ],\n                [\n                    \"M\",\n                    523,\n                    580\n                ],\n                [\n                    \"N\",\n                    635,\n                    580\n                ],\n                [\n                    \"O\",\n                    850,\n                    580\n                ]\n            ].map((v)=>this.V.add.apply(this.V, v));\n            [\n                [\n                    \"A\",\n                    \"B\",\n                    1\n                ],\n                [\n                    \"A\",\n                    \"C\",\n                    1\n                ],\n                [\n                    \"A\",\n                    \"D\",\n                    1\n                ],\n                [\n                    \"B\",\n                    \"E\",\n                    1\n                ],\n                [\n                    \"B\",\n                    \"F\",\n                    1\n                ],\n                [\n                    \"C\",\n                    \"G\",\n                    1\n                ],\n                [\n                    \"C\",\n                    \"H\",\n                    1\n                ],\n                [\n                    \"D\",\n                    \"I\",\n                    1\n                ],\n                [\n                    \"D\",\n                    \"J\",\n                    1\n                ],\n                [\n                    \"G\",\n                    \"K\",\n                    1\n                ],\n                [\n                    \"G\",\n                    \"L\",\n                    1\n                ],\n                [\n                    \"H\",\n                    \"M\",\n                    1\n                ],\n                [\n                    \"H\",\n                    \"N\",\n                    1\n                ],\n                [\n                    \"J\",\n                    \"O\",\n                    1\n                ]\n            ].map((v)=>this.E.add.apply(this.E, v));\n        } else if (id == 4) {\n            [\n                [\n                    \"00\",\n                    150,\n                    275\n                ],\n                [\n                    \"10\",\n                    150,\n                    425\n                ],\n                [\n                    \"20\",\n                    150,\n                    575\n                ],\n                [\n                    \"30\",\n                    150,\n                    725\n                ],\n                [\n                    \"40\",\n                    150,\n                    875\n                ],\n                [\n                    \"01\",\n                    300,\n                    275\n                ],\n                [\n                    \"11\",\n                    300,\n                    425\n                ],\n                [\n                    \"21\",\n                    300,\n                    575\n                ],\n                [\n                    \"31\",\n                    300,\n                    725\n                ],\n                [\n                    \"41\",\n                    300,\n                    875\n                ],\n                [\n                    \"02\",\n                    450,\n                    275\n                ],\n                [\n                    \"12\",\n                    450,\n                    425\n                ],\n                [\n                    \"22\",\n                    450,\n                    575\n                ],\n                [\n                    \"32\",\n                    450,\n                    725\n                ],\n                [\n                    \"42\",\n                    450,\n                    875\n                ],\n                [\n                    \"03\",\n                    600,\n                    275\n                ],\n                [\n                    \"13\",\n                    600,\n                    425\n                ],\n                [\n                    \"23\",\n                    600,\n                    575\n                ],\n                [\n                    \"33\",\n                    600,\n                    725\n                ],\n                [\n                    \"43\",\n                    600,\n                    875\n                ],\n                [\n                    \"04\",\n                    750,\n                    275\n                ],\n                [\n                    \"14\",\n                    750,\n                    425\n                ],\n                [\n                    \"24\",\n                    750,\n                    575\n                ],\n                [\n                    \"34\",\n                    750,\n                    725\n                ],\n                [\n                    \"44\",\n                    750,\n                    875\n                ]\n            ].map((v)=>this.V.add.apply(this.V, v));\n            [\n                [\n                    \"00\",\n                    \"01\",\n                    1\n                ],\n                [\n                    \"00\",\n                    \"10\",\n                    1\n                ],\n                [\n                    \"00\",\n                    \"10\",\n                    1\n                ],\n                [\n                    \"01\",\n                    \"02\",\n                    1\n                ],\n                [\n                    \"02\",\n                    \"12\",\n                    1\n                ],\n                [\n                    \"02\",\n                    \"12\",\n                    1\n                ],\n                [\n                    \"04\",\n                    \"14\",\n                    1\n                ],\n                [\n                    \"04\",\n                    \"14\",\n                    1\n                ],\n                [\n                    \"10\",\n                    \"20\",\n                    1\n                ],\n                [\n                    \"10\",\n                    \"20\",\n                    1\n                ],\n                [\n                    \"12\",\n                    \"13\",\n                    1\n                ],\n                [\n                    \"12\",\n                    \"22\",\n                    1\n                ],\n                [\n                    \"12\",\n                    \"22\",\n                    1\n                ],\n                [\n                    \"13\",\n                    \"14\",\n                    1\n                ],\n                [\n                    \"14\",\n                    \"24\",\n                    1\n                ],\n                [\n                    \"14\",\n                    \"24\",\n                    1\n                ],\n                [\n                    \"20\",\n                    \"30\",\n                    1\n                ],\n                [\n                    \"20\",\n                    \"30\",\n                    1\n                ],\n                [\n                    \"22\",\n                    \"32\",\n                    1\n                ],\n                [\n                    \"22\",\n                    \"32\",\n                    1\n                ],\n                [\n                    \"24\",\n                    \"34\",\n                    1\n                ],\n                [\n                    \"24\",\n                    \"34\",\n                    1\n                ],\n                [\n                    \"30\",\n                    \"40\",\n                    1\n                ],\n                [\n                    \"30\",\n                    \"40\",\n                    1\n                ],\n                [\n                    \"32\",\n                    \"33\",\n                    1\n                ],\n                [\n                    \"32\",\n                    \"42\",\n                    1\n                ],\n                [\n                    \"32\",\n                    \"42\",\n                    1\n                ],\n                [\n                    \"33\",\n                    \"34\",\n                    1\n                ],\n                [\n                    \"33\",\n                    \"43\",\n                    1\n                ],\n                [\n                    \"33\",\n                    \"43\",\n                    1\n                ],\n                [\n                    \"34\",\n                    \"44\",\n                    1\n                ],\n                [\n                    \"34\",\n                    \"44\",\n                    1\n                ],\n                [\n                    \"40\",\n                    \"41\",\n                    1\n                ],\n                [\n                    \"41\",\n                    \"42\",\n                    1\n                ],\n                [\n                    \"42\",\n                    \"43\",\n                    1\n                ],\n                [\n                    \"43\",\n                    \"44\",\n                    1\n                ]\n            ].map((v)=>this.E.add.apply(this.E, v));\n        }\n        this.refresh();\n    }\n    graph_select() {\n        const id = parseInt($('#graph-select').val());\n        this.load_sample(id);\n    }\n}\n /*  Not a pure module */ \n},{\"./ColorCode.js\":\"fgi4l\",\"./DrawUtil.js\":\"d335M\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jBTt3\"}],\"fgi4l\":[function(require,module,exports,__globalThis) {\n// Generated by ReScript, PLEASE EDIT WITH CARE\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"grayScale\", ()=>grayScale) /* black Not a pure module */ ;\nparcelHelpers.export(exports, \"hsv\", ()=>hsv);\nparcelHelpers.export(exports, \"black\", ()=>black);\nparcelHelpers.export(exports, \"dark\", ()=>dark);\nparcelHelpers.export(exports, \"gray\", ()=>gray);\nparcelHelpers.export(exports, \"lightGray\", ()=>lightGray);\nparcelHelpers.export(exports, \"white\", ()=>white);\nparcelHelpers.export(exports, \"red\", ()=>red);\nparcelHelpers.export(exports, \"yellow\", ()=>yellow);\nparcelHelpers.export(exports, \"blue\", ()=>blue);\nparcelHelpers.export(exports, \"lightBlue\", ()=>lightBlue);\nparcelHelpers.export(exports, \"orange\", ()=>orange);\nfunction grayScale(v) {\n    console.assert(0 <= v && v <= 255, \"Scale error\");\n    return [\n        v,\n        v,\n        v\n    ];\n}\nfunction hsv(h, s, v) {\n    console.assert(0 <= h && h <= 360, \"Scale error\");\n    console.assert(0 <= s && s <= 100, \"Scale error\");\n    console.assert(0 <= v && v <= 100, \"Scale error\");\n    var normalize = function(x) {\n        return Math.round(x * 255.0) | 0;\n    };\n    var hf = h;\n    var sf = s / 100.0;\n    var vf = v / 100.0;\n    if (s === 0) {\n        var v$1 = normalize(vf);\n        return [\n            v$1,\n            v$1,\n            v$1\n        ];\n    }\n    var nh = hf / 60.0;\n    var i = Math.floor(nh) | 0;\n    var f = nh - i;\n    var p = vf * (1.0 - sf);\n    var q = vf * (1.0 - sf * f);\n    var t = vf * (1.0 - sf * (1.0 - f));\n    var match;\n    switch(i){\n        case 0:\n            match = [\n                vf,\n                t,\n                p\n            ];\n            break;\n        case 1:\n            match = [\n                q,\n                vf,\n                p\n            ];\n            break;\n        case 2:\n            match = [\n                p,\n                vf,\n                t\n            ];\n            break;\n        case 3:\n            match = [\n                p,\n                q,\n                vf\n            ];\n            break;\n        case 4:\n            match = [\n                t,\n                p,\n                vf\n            ];\n            break;\n        default:\n            match = [\n                vf,\n                p,\n                q\n            ];\n    }\n    var r = normalize(match[0]);\n    var g = normalize(match[1]);\n    var b = normalize(match[2]);\n    return [\n        r,\n        g,\n        b\n    ];\n}\nvar black = grayScale(0);\nvar dark = grayScale(30);\nvar gray = grayScale(120);\nvar lightGray = grayScale(180);\nvar white = grayScale(255);\nvar red = hsv(18, 80, 100);\nvar yellow = hsv(57, 80, 100);\nvar blue = hsv(200, 80, 100);\nvar lightBlue = hsv(200, 20, 100);\nvar orange = hsv(40, 80, 100);\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jBTt3\"}],\"jBTt3\":[function(require,module,exports,__globalThis) {\nexports.interopDefault = function(a) {\n    return a && a.__esModule ? a : {\n        default: a\n    };\n};\nexports.defineInteropFlag = function(a) {\n    Object.defineProperty(a, '__esModule', {\n        value: true\n    });\n};\nexports.exportAll = function(source, dest) {\n    Object.keys(source).forEach(function(key) {\n        if (key === 'default' || key === '__esModule' || Object.prototype.hasOwnProperty.call(dest, key)) return;\n        Object.defineProperty(dest, key, {\n            enumerable: true,\n            get: function() {\n                return source[key];\n            }\n        });\n    });\n    return dest;\n};\nexports.export = function(dest, destName, get) {\n    Object.defineProperty(dest, destName, {\n        enumerable: true,\n        get: get\n    });\n};\n\n},{}],\"d335M\":[function(require,module,exports,__globalThis) {\n// Generated by ReScript, PLEASE EDIT WITH CARE\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"strokeWeight\", ()=>strokeWeight$1) /* P5 Not a pure module */ ;\nparcelHelpers.export(exports, \"textSize\", ()=>textSize$1);\nparcelHelpers.export(exports, \"nodeRadius\", ()=>nodeRadius);\nparcelHelpers.export(exports, \"drawNode\", ()=>drawNode);\nparcelHelpers.export(exports, \"epsilon\", ()=>epsilon);\nparcelHelpers.export(exports, \"calc_dist\", ()=>calc_dist);\nparcelHelpers.export(exports, \"calc_edge_point\", ()=>calc_edge_point);\nparcelHelpers.export(exports, \"rotation\", ()=>rotation);\nvar _p5Js = require(\"./P5.js\");\nvar _colorCodeJs = require(\"./ColorCode.js\");\nfunction drawNode(x, y, label) {\n    var nodeSize = 50;\n    strokeWeight(2);\n    _p5Js.fillColor(_colorCodeJs.white);\n    ellipse(x, y, nodeSize, nodeSize);\n    textAlign(CENTER, CENTER);\n    textSize(24);\n    _p5Js.fillColor(_colorCodeJs.black);\n    text(label, x, y);\n}\nvar calc_dist = function(x1, y1, x2, y2) {\n    return Math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2);\n};\nvar calc_edge_point = function(x1, y1, x2, y2, px, py, r) {\n    if (x1 == x2) x1 += epsilon;\n    const d = (y2 - y1) / (x2 - x1);\n    const f = r / Math.sqrt(1 + d * d);\n    const [qx, qy] = [\n        x1 + f,\n        y1 + d * f\n    ];\n    const [rx, ry] = [\n        x1 - f,\n        y1 - d * f\n    ];\n    const [mx, my] = [\n        (x1 + x2) / 2,\n        (y1 + y2) / 2\n    ];\n    if (calc_dist(qx, qy, mx, my) < calc_dist(rx, ry, mx, my)) return [\n        qx,\n        qy\n    ];\n    else return [\n        rx,\n        ry\n    ];\n};\nvar rotation = function(cx, cy, x, y, theta) {\n    const tx = (x - cx) * Math.cos(theta) - (y - cy) * Math.sin(theta) + cx;\n    const ty = (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta) + cy;\n    return [\n        tx,\n        ty\n    ];\n};\nvar strokeWeight$1 = 2;\nvar textSize$1 = 24;\nvar nodeRadius = 25;\nvar epsilon = 0.00001;\n\n},{\"./P5.js\":\"kRQjY\",\"./ColorCode.js\":\"fgi4l\",\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jBTt3\"}],\"kRQjY\":[function(require,module,exports,__globalThis) {\n// Generated by ReScript, PLEASE EDIT WITH CARE\nvar parcelHelpers = require(\"@parcel/transformer-js/src/esmodule-helpers.js\");\nparcelHelpers.defineInteropFlag(exports);\nparcelHelpers.export(exports, \"fillColor\", ()=>fillColor) /*  Not a pure module */ ;\nparcelHelpers.export(exports, \"strokeColor\", ()=>strokeColor);\nfunction rawFill(color_code) {\n    fill.apply(null, color_code);\n}\nfunction fillColor(prim) {\n    rawFill(prim);\n}\nfunction rawStroke(color_code) {\n    stroke.apply(null, color_code);\n}\nfunction strokeColor(prim) {\n    rawStroke(prim);\n}\n\n},{\"@parcel/transformer-js/src/esmodule-helpers.js\":\"jBTt3\"}]},[\"aD9It\"], \"aD9It\", \"parcelRequire94c2\")\n\n//# sourceMappingURL=DirectedGraphVis.js.map\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\n\nimport { DirectedGraph } from './Graph.js'\n\nconst graph = new DirectedGraph();\nwindow.setup = graph.setup.bind(graph);\nwindow.draw = graph.draw.bind(graph);\nwindow.mouseMoved = graph.mouseMoved.bind(graph);\nwindow.mouseReleased = graph.mouseReleased.bind(graph);\nwindow.matrix_change = graph.matrix_change.bind(graph);\n\n$(document).ready(function() {\n  $('#add').click(() => graph.change_mode());\n  $('#graph-select').change(() => graph.graph_select());\n});\n;\n\nexport {\n  \n}\n/*  Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\n\nimport { black, gray, lightGray, orange, white} from './ColorCode.js'\nimport { calc_dist, calc_edge_point, rotation } from './DrawUtil.js'\n\nconst text_size = 24;\nconst canvas_w = 1000;\nconst canvas_h = 1000;\n\nclass V {\n  constructor() {\n    this.node_r = 25;\n    this.nodes = [];\n  }\n\n  draw_node(node) {\n    drawingContext.setLineDash([]);\n\n    const node_d = this.node_r * 2;\n    strokeWeight(2);\n    stroke.apply(null, black);\n    fill.apply(null, node.color);\n    ellipse(node.x, node.y, node_d, node_d);\n\n    textAlign(CENTER, CENTER);\n    fill(0);\n    textSize(text_size);\n    text(node.label, node.x, node.y);\n  }\n\n  make(label, x, y, color=white) {\n    return {\n      label: label,\n      x: x,\n      y: y,\n      color: color\n    }\n  }\n\n  add(...args) {\n    const v = this.make.apply(this, args);\n    this.nodes.push(v);\n  }\n\n  modify(v, new_v) {\n    this.nodes = this.nodes.map(u => u == v ? new_v : u);\n  }\n\n  get(i) {\n    return this.nodes[i];\n  }\n\n  get_index(label) {\n    return this.nodes.findIndex(x => x.label == label);\n  }\n\n  get_node_from_canvas(px, py) {\n    return this.nodes.find(v => calc_dist(px, py, v.x, v.y) <= this.node_r);\n  }\n\n  get_nodes() {\n    return this.nodes;\n  }\n\n  get_labels() {\n    return this.nodes.map(v => v.label);\n  }\n\n  get_size() {\n    return this.nodes.length;\n  }\n\n  draw() {\n    this.nodes.forEach(this.draw_node, this);\n  }\n}\n\nclass E {\n  constructor(V, directed) {\n    this.V = V;\n    this.edges = [];\n    this.directed = directed;\n  }\n\n  draw_arrow_head(x1, y1, x2, y2, color) {\n    strokeWeight(2);\n    fill.apply(null, color);\n    stroke.apply(null, color);\n    const [ax, ay] = calc_edge_point(x2, y2, x1, y1, x2, y2, 10);\n    const [bx, by] = rotation(x2, y2, ax, ay, Math.PI / 8);\n    const [cx, cy] = rotation(x2, y2, ax, ay, -Math.PI / 8);\n    triangle(x2, y2, bx, by, cx, cy);\n  }\n\n  draw_arrow(x1, y1, x2, y2, color) {\n    strokeWeight(2);\n    fill.apply(null, color);\n    stroke.apply(null, color);\n    line(x1, y1, x2, y2);\n    if (this.directed)\n      this.draw_arrow_head(x1, y1, x2, y2, color);\n  }\n\n  draw_curve_arrow(x1, y1, x2, y2, control_x, control_y, color) {\n    strokeWeight(2);\n    noFill();\n    stroke.apply(null, color);\n    bezier(x1, y1, control_x, control_y, control_x, control_y, x2, y2);\n    this.draw_arrow_head(control_x, control_y, x2, y2, color);\n  }\n\n  draw_label(label, x, y) {\n    textAlign(CENTER, CENTER);\n    fill(0);\n    stroke.apply(null, white);\n    strokeWeight(5);\n    textSize(text_size);\n\n    text(label, x, y);\n  }\n\n  draw_edge(edge) {\n    if (edge.weight == 0)\n      return;\n\n    drawingContext.setLineDash(edge.dashed ? [5] : []);\n\n    const [n1, n2] = [this.V.get(edge.from), this.V.get(edge.to)];\n    const [x1, y1] = [n1.x, n1.y];\n    const [x2, y2] = [n2.x, n2.y];\n    const [mx, my] = [(x1+x2)/2, (y1+y2)/2];\n\n    const r = this.V.node_r * 1.4;\n    const [px, py] = calc_edge_point(x1, y1, x2, y2, x1, y1, r);\n    const [qx, qy] = calc_edge_point(x2, y2, x1, y1, x2, y2, r);\n\n    const inv_e = this.get(edge.to, edge.from);\n    if (this.directed && inv_e) {\n      const vec = [x2-x1, y2-y1];\n      const dist = Math.sqrt(vec[0]*vec[0] + vec[1]*vec[1]);\n      const n_vec = [vec[0]/dist, vec[1]/dist];\n      const dv = [-n_vec[1]*r, n_vec[0]*r];\n      const [rx, ry] = [ mx+dv[0], my+dv[1] ];\n      \n      const [px2, py2] = [ px+0.25*dv[0], py+0.25*dv[1] ];\n      const [qx2, qy2] = [ qx+0.25*dv[0], qy+0.25*dv[1] ];\n      this.draw_curve_arrow(px2, py2, qx2, qy2, rx, ry, edge.color);\n      this.draw_label(edge.weight, rx, ry);\n    } else {\n      this.draw_arrow(px, py, qx, qy, edge.color);\n      this.draw_label(edge.weight, mx, my);\n    }\n  }\n\n  get0(from, to) {\n    if (typeof from == 'number')\n      return this.get_edges().find(e => e.from == from && e.to == to);\n    return this.get_edges().find(e => this.V.get(e.from) == from && this.V.get(e.to) == to);\n  }\n\n  get(from, to) {\n    if (this.directed) {\n      return this.get0(from, to);\n    } else {\n      const u = this.get0(from, to);\n      return u ? u : this.get0(to, from);\n    }\n  }\n\n  get_edges() {\n    return this.edges.filter(e => e.weight != 0);\n  }\n\n  draw() {\n    this.edges.forEach(this.draw_edge, this);\n  }\n\n  make(from_label, to_label, w) {\n    return {\n      from: this.V.get_index(from_label),\n      to: this.V.get_index(to_label),\n      weight: w,\n      color: black,\n      dashed: false\n    }\n  }\n\n  add(...args) {\n    const e = this.make.apply(this, args);\n    this.edges.push(e);\n  }\n\n  modify(u, v, new_e) {\n    const check = (idx, target) => this.V.get(idx) == target;\n    this.edges = this.edges.map(e =>\n      check(e.from, u) && check(e.to, v) ? new_e : e\n    );\n  }\n\n  get_html(i, j) {\n    if (i == j) {\n      return '<td>0</td>';\n    } else if (this.directed || i < j) {\n      const e = this.get(i, j);\n      return '<td><input class=\"alg-input\" type=\"number\" onchange=\"matrix_change(' + String(i) + ',' + String(j) + ',this.value)\" type=\"text\" value=\"' + String(e ? e.weight : 0) + '\"></td>';\n    } else {\n      const inv_e = this.get(j, i);\n      return '<td>' + String(inv_e ? inv_e.weight : 0) + '</td>';\n    }\n  }\n}\n\nexport class Graph {\n  static normal_mode = 0;\n  static add_mode = 1;\n  static edit_mode = 2;\n\n  constructor(directed=true) {\n    this.V = new V();\n    this.E = new E(this.V, directed);\n    this.mode = Graph.normal_mode;\n    this.edit_mode = null;\n  }\n\n  graph_reset() {\n    this.V.nodes = [];\n    this.E.edges = [];\n  }\n\n  matrix_change(i, j, val) {\n    const [u, v] = [this.V.get(i), this.V.get(j)];\n    const e = this.E.get(i, j);\n    const w = parseInt(val);\n    if (e) {\n      const new_e = this.E.make(u.label, v.label, w)\n      this.E.modify(u, v, new_e);\n    } else {\n      this.E.add(u.label, v.label, w);\n    }\n    this.refresh();\n  }\n\n  matrix_refresh() {\n    $('#matrix_tbl').empty().append($('<thead>'), $('<tbody>'));\n    $('#matrix_tbl thead').append([\n      '<tr>',\n      '<td class=\"gray\"></td>',\n      this.V.get_labels().map(x => '<td class=\"gray text-center\">' + x + '</td>').join(\"\"),\n      '</tr>'\n    ].join(''));\n    for (let i = 0; i < this.V.get_size(); i++) {\n      const u = this.V.get(i);\n      $('#matrix_tbl tbody').append([\n        '<tr>',\n        '<td class=\"gray\">' + u.label + '</td>',\n        Array.from(Array(this.V.get_size())).map(function (_, j) {\n          return this.E.get_html(i, j);\n        }.bind(this)).join(''),\n        '</tr>'\n      ].join(''))\n    }\n    // this.debug_output();\n  }\n\n  debug_output() {\n    console.log('----');\n    const v_logs = [];\n    const e_logs = [];\n    for (const v of this.V.get_nodes()) {\n      v_logs.push('[' + ['\"' + v.label + '\"', parseInt(v.x), parseInt(v.y)].join(', ') + ']');\n    }\n    for (const e of this.E.get_edges()) {\n      const u = this.V.get(e.from);\n      const v = this.V.get(e.to);\n      e_logs.push('[' + [\n        '\"' + u.label + '\"',\n        '\"' + v.label + '\"',\n        e.weight].join(', ') + ']');\n    }\n    console.log(v_logs.join(',\\n'))\n    console.log(e_logs.join(',\\n'))\n  }\n\n  refresh() {\n    this.matrix_refresh();\n    redraw();\n  }\n\n  change_mode(mode=Graph.add_mode) {\n    if (mode == Graph.add_mode && $('#node_label').val() == '') {\n      alert(\"エラー: 頂点名が空です\");\n    } else {\n      this.mode = mode;\n      this.refresh();\n    }\n  }\n\n  draw() {\n    background(this.mode == Graph.add_mode || this.mode == Graph.edit_mode ? gray : lightGray);\n    this.V.draw();\n    this.E.draw();\n    if (this.mode == Graph.add_mode || this.mode == Graph.edit_mode) {\n      strokeWeight(2);\n      stroke.apply(null, black);\n      drawingContext.setLineDash([10, 10]);\n      line(mouseX, 0, mouseX, canvas_h);\n      line(0, mouseY, canvas_w, mouseY);\n      const label = this.mode == Graph.add_mode\n                  ? $('#node_label').val()\n                  : this.editing_node.label;\n      this.V.draw_node(this.V.make(label, mouseX, mouseY, orange));\n    }\n  }\n\n  setup() {\n    const canvas = createCanvas(canvas_w, canvas_h);\n    canvas.parent('canvas-hole');\n    noLoop();\n  }\n\n  mouseMoved() {\n    if (this.mode == Graph.add_mode || this.mode == Graph.edit_mode)\n      redraw();\n  }\n\n  mouseReleased() {\n    if (this.mode == Graph.add_mode) {\n      const label = $('#node_label').val();\n      this.V.add(label, mouseX, mouseY);\n      $('#node_label').val('');\n      this.change_mode(Graph.normal_mode);\n    } else if (this.mode == Graph.edit_mode) {\n      this.editing_node.x = mouseX;\n      this.editing_node.y = mouseY;\n      this.editing_node = null;\n      this.change_mode(Graph.normal_mode);\n    } else {\n      const v = this.V.get_node_from_canvas(mouseX, mouseY);\n      if (v) {\n        this.editing_node = v;\n        this.change_mode(Graph.edit_mode);\n      }\n    }\n  }\n}\n\nexport class DirectedGraph extends Graph {\n  constructor() {\n    super(true);\n  }\n\n  load_sample(id) {\n    this.graph_reset();\n    if (id == 1) {\n      [\n        [\"A\", 97, 493],\n        [\"B\", 258, 351],\n        [\"C\", 334, 593],\n        [\"D\", 615, 354],\n        [\"E\", 521, 572],\n        [\"F\", 802, 503]\n      ].map((v) => this.V.add.apply(this.V, v));\n      [\n        [\"A\", \"B\", 3],\n        [\"A\", \"C\", 5],\n        [\"B\", \"C\", 4],\n        [\"B\", \"D\", 13],\n        [\"C\", \"E\", 4],\n        [\"C\", \"D\", 9],\n        [\"D\", \"F\", 2],\n        [\"E\", \"D\", 7],\n        [\"E\", \"F\", 8]\n      ].map((v) => this.E.add.apply(this.E, v));\n    } else if (id == 2) {\n      [\n        [\"A\", 110, 500],\n        [\"B\", 240, 340],\n        [\"C\", 240, 650],\n        [\"D\", 480, 340],\n        [\"E\", 480, 500],\n        [\"F\", 480, 650],\n        [\"G\", 710, 340],\n        [\"H\", 710, 650],\n        [\"I\", 880, 500]\n      ].map((v) => this.V.add.apply(this.V, v));\n      [\n        [\"A\", \"B\", 4],\n        [\"A\", \"C\", 8],\n        [\"B\", \"C\", 11],\n        [\"B\", \"D\", 8],\n        [\"C\", \"E\", 7],\n        [\"D\", \"E\", 2],\n        [\"D\", \"H\", 4],\n        [\"D\", \"G\", 7],\n        [\"E\", \"F\", 6],\n        [\"C\", \"F\", 1],\n        [\"F\", \"H\", 2],\n        [\"G\", \"H\", 14],\n        [\"G\", \"I\", 9],\n        [\"H\", \"I\", 10]\n      ].map((v) => this.E.add.apply(this.E, v));\n    } else if (id == 3) {\n      [\n        [\"A\", 480, 290],\n        [\"B\", 212, 450],\n        [\"C\", 480, 450],\n        [\"D\", 777, 450],\n        [\"E\", 148, 620],\n        [\"F\", 265, 620],\n        [\"G\", 411, 620],\n        [\"H\", 559, 620],\n        [\"I\", 727, 620],\n        [\"J\", 850, 620],\n        [\"K\", 315, 780],\n        [\"L\", 445, 780],\n        [\"M\", 523, 780],\n        [\"N\", 635, 780],\n        [\"O\", 850, 780]\n      ].map((v) => this.V.add.apply(this.V, v));\n      [\n        [\"A\", \"B\", 1],\n        [\"A\", \"C\", 1],\n        [\"A\", \"D\", 1],\n        [\"B\", \"E\", 1],\n        [\"B\", \"F\", 1],\n        [\"C\", \"G\", 1],\n        [\"C\", \"H\", 1],\n        [\"D\", \"I\", 1],\n        [\"D\", \"J\", 1],\n        [\"G\", \"K\", 1],\n        [\"G\", \"L\", 1],\n        [\"H\", \"M\", 1],\n        [\"H\", \"N\", 1],\n        [\"J\", \"O\", 1]\n      ].map((v) => this.E.add.apply(this.E, v));\n    } else if (id == 4) {\n      [\n        [\"00\", 150, 275],\n        [\"10\", 150, 425],\n        [\"20\", 150, 575],\n        [\"30\", 150, 725],\n        [\"40\", 150, 875],\n        [\"01\", 300, 275],\n        [\"11\", 300, 425],\n        [\"21\", 300, 575],\n        [\"31\", 300, 725],\n        [\"41\", 300, 875],\n        [\"02\", 450, 275],\n        [\"12\", 450, 425],\n        [\"22\", 450, 575],\n        [\"32\", 450, 725],\n        [\"42\", 450, 875],\n        [\"03\", 600, 275],\n        [\"13\", 600, 425],\n        [\"23\", 600, 575],\n        [\"33\", 600, 725],\n        [\"43\", 600, 875],\n        [\"04\", 750, 275],\n        [\"14\", 750, 425],\n        [\"24\", 750, 575],\n        [\"34\", 750, 725],\n        [\"44\", 750, 875]\n      ].map((v) => this.V.add.apply(this.V, v));\n      [\n        [\"00\", \"01\", 1],\n        [\"01\", \"00\", 1],\n        [\"00\", \"10\", 1],\n        [\"10\", \"00\", 1],\n        [\"00\", \"10\", 1],\n        [\"10\", \"00\", 1],\n        [\"01\", \"02\", 1],\n        [\"02\", \"01\", 1],\n        [\"02\", \"12\", 1],\n        [\"12\", \"02\", 1],\n        [\"02\", \"12\", 1],\n        [\"12\", \"02\", 1],\n        [\"04\", \"14\", 1],\n        [\"14\", \"04\", 1],\n        [\"04\", \"14\", 1],\n        [\"14\", \"04\", 1],\n        [\"10\", \"20\", 1],\n        [\"20\", \"10\", 1],\n        [\"10\", \"20\", 1],\n        [\"20\", \"10\", 1],\n        [\"12\", \"13\", 1],\n        [\"13\", \"12\", 1],\n        [\"12\", \"22\", 1],\n        [\"22\", \"12\", 1],\n        [\"12\", \"22\", 1],\n        [\"22\", \"12\", 1],\n        [\"13\", \"14\", 1],\n        [\"14\", \"13\", 1],\n        [\"14\", \"24\", 1],\n        [\"24\", \"14\", 1],\n        [\"14\", \"24\", 1],\n        [\"24\", \"14\", 1],\n        [\"20\", \"30\", 1],\n        [\"30\", \"20\", 1],\n        [\"20\", \"30\", 1],\n        [\"30\", \"20\", 1],\n        [\"22\", \"32\", 1],\n        [\"32\", \"22\", 1],\n        [\"22\", \"32\", 1],\n        [\"32\", \"22\", 1],\n        [\"24\", \"34\", 1],\n        [\"34\", \"24\", 1],\n        [\"24\", \"34\", 1],\n        [\"34\", \"24\", 1],\n        [\"30\", \"40\", 1],\n        [\"40\", \"30\", 1],\n        [\"30\", \"40\", 1],\n        [\"40\", \"30\", 1],\n        [\"32\", \"33\", 1],\n        [\"33\", \"32\", 1],\n        [\"32\", \"42\", 1],\n        [\"42\", \"32\", 1],\n        [\"32\", \"42\", 1],\n        [\"42\", \"32\", 1],\n        [\"33\", \"34\", 1],\n        [\"34\", \"33\", 1],\n        [\"33\", \"43\", 1],\n        [\"43\", \"33\", 1],\n        [\"33\", \"43\", 1],\n        [\"43\", \"33\", 1],\n        [\"34\", \"44\", 1],\n        [\"44\", \"34\", 1],\n        [\"34\", \"44\", 1],\n        [\"44\", \"34\", 1],\n        [\"40\", \"41\", 1],\n        [\"41\", \"40\", 1],\n        [\"41\", \"42\", 1],\n        [\"42\", \"41\", 1],\n        [\"42\", \"43\", 1],\n        [\"43\", \"42\", 1],\n        [\"43\", \"44\", 1],\n        [\"44\", \"43\", 1]\n      ].map((v) => this.E.add.apply(this.E, v));\n    }\n    this.refresh();\n  }\n\n  graph_select() {\n    const id = parseInt($('#graph-select').val());\n    this.load_sample(id);\n  }\n}\n\nexport class UndirectedGraph extends Graph {\n  constructor() {\n    super(false);\n  }\n\n  is_connected() {\n    const g = this;\n    const visitted = new Set();\n    function dfs(i) {\n      visitted.add(i);\n      for (let j = 0; j < g.V.get_size(); j++)\n        if (!visitted.has(j) && g.E.get(i, j))\n          dfs(j);\n    }\n    dfs(0);\n    return this.V.get_size() == visitted.size;\n  }\n\n  load_sample(id) {\n    this.graph_reset();\n    if (id == 1) {\n      [\n        [\"0\", 669, 458],\n        [\"1\", 309, 508],\n        [\"2\", 464, 227],\n        [\"3\", 512, 508],\n        [\"4\", 162, 361],\n        [\"5\", 829, 338],\n        [\"6\", 361, 387],\n        [\"7\", 536, 388]\n      ].map((v) => this.V.add.apply(this.V, v));\n      [\n        [\"0\", \"3\", 5],\n        [\"0\", \"5\", 6],\n        [\"0\", \"7\", 3],\n        [\"1\", \"3\", 8],\n        [\"1\", \"6\", 3],\n        [\"1\", \"4\", 4],\n        [\"2\", \"4\", 9],\n        [\"2\", \"5\", 10],\n        [\"2\", \"7\", 5],\n        [\"3\", \"7\", 6],\n        [\"4\", \"6\", 2],\n        [\"6\", \"7\", 7]\n      ].map((v) => this.E.add.apply(this.E, v));\n    } else if (id == 2) {\n      [\n        [\"A\", 110, 340],\n        [\"B\", 240, 180],\n        [\"C\", 240, 490],\n        [\"D\", 480, 180],\n        [\"E\", 480, 340],\n        [\"F\", 480, 490],\n        [\"G\", 710, 180],\n        [\"H\", 710, 490],\n        [\"I\", 880, 340]\n      ].map((v) => this.V.add.apply(this.V, v));\n      [\n        [\"A\", \"B\", 4],\n        [\"A\", \"C\", 8],\n        [\"B\", \"C\", 11],\n        [\"B\", \"D\", 8],\n        [\"C\", \"E\", 7],\n        [\"D\", \"E\", 2],\n        [\"D\", \"H\", 4],\n        [\"D\", \"G\", 7],\n        [\"E\", \"F\", 6],\n        [\"C\", \"F\", 1],\n        [\"F\", \"H\", 2],\n        [\"G\", \"H\", 14],\n        [\"G\", \"I\", 9],\n        [\"H\", \"I\", 10]\n      ].map((v) => this.E.add.apply(this.E, v));\n    } else if (id == 3) {\n      [\n        [\"A\", 480, 90],\n        [\"B\", 212, 250],\n        [\"C\", 480, 250],\n        [\"D\", 777, 250],\n        [\"E\", 148, 420],\n        [\"F\", 265, 420],\n        [\"G\", 411, 420],\n        [\"H\", 559, 420],\n        [\"I\", 727, 420],\n        [\"J\", 850, 420],\n        [\"K\", 315, 580],\n        [\"L\", 445, 580],\n        [\"M\", 523, 580],\n        [\"N\", 635, 580],\n        [\"O\", 850, 580]\n      ].map((v) => this.V.add.apply(this.V, v));\n      [\n        [\"A\", \"B\", 1],\n        [\"A\", \"C\", 1],\n        [\"A\", \"D\", 1],\n        [\"B\", \"E\", 1],\n        [\"B\", \"F\", 1],\n        [\"C\", \"G\", 1],\n        [\"C\", \"H\", 1],\n        [\"D\", \"I\", 1],\n        [\"D\", \"J\", 1],\n        [\"G\", \"K\", 1],\n        [\"G\", \"L\", 1],\n        [\"H\", \"M\", 1],\n        [\"H\", \"N\", 1],\n        [\"J\", \"O\", 1]\n      ].map((v) => this.E.add.apply(this.E, v));\n    } else if (id == 4) {\n      [\n        [\"00\", 150, 275],\n        [\"10\", 150, 425],\n        [\"20\", 150, 575],\n        [\"30\", 150, 725],\n        [\"40\", 150, 875],\n        [\"01\", 300, 275],\n        [\"11\", 300, 425],\n        [\"21\", 300, 575],\n        [\"31\", 300, 725],\n        [\"41\", 300, 875],\n        [\"02\", 450, 275],\n        [\"12\", 450, 425],\n        [\"22\", 450, 575],\n        [\"32\", 450, 725],\n        [\"42\", 450, 875],\n        [\"03\", 600, 275],\n        [\"13\", 600, 425],\n        [\"23\", 600, 575],\n        [\"33\", 600, 725],\n        [\"43\", 600, 875],\n        [\"04\", 750, 275],\n        [\"14\", 750, 425],\n        [\"24\", 750, 575],\n        [\"34\", 750, 725],\n        [\"44\", 750, 875]\n      ].map((v) => this.V.add.apply(this.V, v));\n      [\n        [\"00\", \"01\", 1],\n        [\"00\", \"10\", 1],\n        [\"00\", \"10\", 1],\n        [\"01\", \"02\", 1],\n        [\"02\", \"12\", 1],\n        [\"02\", \"12\", 1],\n        [\"04\", \"14\", 1],\n        [\"04\", \"14\", 1],\n        [\"10\", \"20\", 1],\n        [\"10\", \"20\", 1],\n        [\"12\", \"13\", 1],\n        [\"12\", \"22\", 1],\n        [\"12\", \"22\", 1],\n        [\"13\", \"14\", 1],\n        [\"14\", \"24\", 1],\n        [\"14\", \"24\", 1],\n        [\"20\", \"30\", 1],\n        [\"20\", \"30\", 1],\n        [\"22\", \"32\", 1],\n        [\"22\", \"32\", 1],\n        [\"24\", \"34\", 1],\n        [\"24\", \"34\", 1],\n        [\"30\", \"40\", 1],\n        [\"30\", \"40\", 1],\n        [\"32\", \"33\", 1],\n        [\"32\", \"42\", 1],\n        [\"32\", \"42\", 1],\n        [\"33\", \"34\", 1],\n        [\"33\", \"43\", 1],\n        [\"33\", \"43\", 1],\n        [\"34\", \"44\", 1],\n        [\"34\", \"44\", 1],\n        [\"40\", \"41\", 1],\n        [\"41\", \"42\", 1],\n        [\"42\", \"43\", 1],\n        [\"43\", \"44\", 1]\n      ].map((v) => this.E.add.apply(this.E, v));\n    }\n    this.refresh();\n  }\n\n  graph_select() {\n    const id = parseInt($('#graph-select').val());\n    this.load_sample(id);\n  }\n}\n;\n\nexport {\n  \n}\n/*  Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\n\nfunction grayScale(v) {\n  console.assert(0 <= v && v <= 255, \"Scale error\");\n  return [\n          v,\n          v,\n          v\n        ];\n}\n\nfunction hsv(h, s, v) {\n  console.assert(0 <= h && h <= 360, \"Scale error\");\n  console.assert(0 <= s && s <= 100, \"Scale error\");\n  console.assert(0 <= v && v <= 100, \"Scale error\");\n  var normalize = function (x) {\n    return Math.round(x * 255.0) | 0;\n  };\n  var hf = h;\n  var sf = s / 100.0;\n  var vf = v / 100.0;\n  if (s === 0) {\n    var v$1 = normalize(vf);\n    return [\n            v$1,\n            v$1,\n            v$1\n          ];\n  }\n  var nh = hf / 60.0;\n  var i = Math.floor(nh) | 0;\n  var f = nh - i;\n  var p = vf * (1.0 - sf);\n  var q = vf * (1.0 - sf * f);\n  var t = vf * (1.0 - sf * (1.0 - f));\n  var match;\n  switch (i) {\n    case 0 :\n        match = [\n          vf,\n          t,\n          p\n        ];\n        break;\n    case 1 :\n        match = [\n          q,\n          vf,\n          p\n        ];\n        break;\n    case 2 :\n        match = [\n          p,\n          vf,\n          t\n        ];\n        break;\n    case 3 :\n        match = [\n          p,\n          q,\n          vf\n        ];\n        break;\n    case 4 :\n        match = [\n          t,\n          p,\n          vf\n        ];\n        break;\n    default:\n      match = [\n        vf,\n        p,\n        q\n      ];\n  }\n  var r = normalize(match[0]);\n  var g = normalize(match[1]);\n  var b = normalize(match[2]);\n  return [\n          r,\n          g,\n          b\n        ];\n}\n\nvar black = grayScale(0);\n\nvar dark = grayScale(30);\n\nvar gray = grayScale(120);\n\nvar lightGray = grayScale(180);\n\nvar white = grayScale(255);\n\nvar red = hsv(18, 80, 100);\n\nvar yellow = hsv(57, 80, 100);\n\nvar blue = hsv(200, 80, 100);\n\nvar lightBlue = hsv(200, 20, 100);\n\nvar orange = hsv(40, 80, 100);\n\nexport {\n  grayScale ,\n  hsv ,\n  black ,\n  dark ,\n  gray ,\n  lightGray ,\n  white ,\n  red ,\n  yellow ,\n  blue ,\n  lightBlue ,\n  orange ,\n}\n/* black Not a pure module */\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\nimport * as P5 from \"./P5.js\";\nimport * as ColorCode from \"./ColorCode.js\";\n\nfunction drawNode(x, y, label) {\n  var nodeSize = 50;\n  strokeWeight(2);\n  P5.fillColor(ColorCode.white);\n  ellipse(x, y, nodeSize, nodeSize);\n  textAlign(CENTER, CENTER);\n  textSize(24);\n  P5.fillColor(ColorCode.black);\n  text(label, x, y);\n}\n\nvar calc_dist = (function(x1, y1, x2, y2) {\n    return Math.sqrt((x1-x2)**2 + (y1-y2)**2);\n  });\n\nvar calc_edge_point = (function(x1, y1, x2, y2, px, py, r) {\n    if (x1 == x2)\n      x1 += epsilon;\n    const d = (y2 - y1) / (x2 - x1);\n    const f = r / Math.sqrt(1 + d*d);\n    const [qx, qy] = [x1 + f, y1 + d * f];\n    const [rx, ry] = [x1 - f, y1 - d * f];\n    const [mx, my] = [(x1+x2)/2, (y1+y2)/2];\n    if (calc_dist(qx, qy, mx, my) < calc_dist(rx, ry, mx, my)) {\n      return [qx, qy];\n    } else {\n      return [rx, ry];\n    }\n  });\n\nvar rotation = (function(cx, cy, x, y, theta) {\n    const tx = (x - cx) * Math.cos(theta) - (y - cy) * Math.sin(theta) + cx;\n    const ty = (x - cx) * Math.sin(theta) + (y - cy) * Math.cos(theta) + cy;\n    return [tx, ty];\n  });\n\nvar strokeWeight$1 = 2;\n\nvar textSize$1 = 24;\n\nvar nodeRadius = 25;\n\nvar epsilon = 0.00001;\n\nexport {\n  strokeWeight$1 as strokeWeight,\n  textSize$1 as textSize,\n  nodeRadius ,\n  drawNode ,\n  epsilon ,\n  calc_dist ,\n  calc_edge_point ,\n  rotation ,\n}\n/* P5 Not a pure module */\n","// Generated by ReScript, PLEASE EDIT WITH CARE\n\n\nfunction rawFill(color_code) {\n  fill.apply(null, color_code);\n}\n;\n\nfunction fillColor(prim) {\n  rawFill(prim);\n}\n\nfunction rawStroke(color_code) {\n  stroke.apply(null, color_code);\n}\n;\n\nfunction strokeColor(prim) {\n  rawStroke(prim);\n}\n\nexport {\n  fillColor ,\n  strokeColor ,\n}\n/*  Not a pure module */\n"],"names":["modules","entry","mainEntry","parcelRequireName","globalName","globalObject","globalThis","self","window","global","previousRequire","cache","nodeRequire","module","require","bind","newRequire","name","jumped","currentRequire","err","Error","code","localRequire","resolve","x","id","Module","call","exports","res","isParcelRequire","moduleName","bundle","parent","register","Object","defineProperty","get","i","length","mainExports","define","amd","__globalThis","parcelHelpers","defineInteropFlag","graph","_graphJs","DirectedGraph","setup","draw","mouseMoved","mouseReleased","matrix_change","$","document","ready","click","change_mode","change","graph_select","export","Graph","UndirectedGraph","_colorCodeJs","_drawUtilJs","V","constructor","node_r","nodes","draw_node","node","drawingContext","setLineDash","node_d","strokeWeight","stroke","apply","black","fill","color","ellipse","y","textAlign","CENTER","textSize","text","label","make","white","add","args","v","push","modify","new_v","map","u","get_index","findIndex","get_node_from_canvas","px","py","find","calc_dist","get_nodes","get_labels","get_size","forEach","E","directed","edges","draw_arrow_head","x1","y1","x2","y2","ax","ay","calc_edge_point","bx","by","rotation","Math","PI","cx","cy","triangle","draw_arrow","line","draw_curve_arrow","control_x","control_y","noFill","bezier","draw_label","draw_edge","edge","weight","dashed","n1","n2","from","to","mx","my","r","qx","qy","inv_e","vec","dist","sqrt","n_vec","dv","rx","ry","px2","py2","qx2","qy2","get0","get_edges","e","filter","from_label","to_label","w","new_e","check","idx","target","get_html","j","String","normal_mode","add_mode","edit_mode","mode","graph_reset","val","parseInt","refresh","matrix_refresh","empty","append","join","Array","_","debug_output","console","log","v_logs","e_logs","redraw","alert","background","gray","lightGray","mouseX","mouseY","editing_node","orange","canvas","createCanvas","noLoop","load_sample","is_connected","g","visitted","Set","dfs","has","size","grayScale","assert","hsv","h","s","match","normalize","round","sf","vf","v$1","nh","hf","floor","f","p","q","t","dark","red","yellow","blue","lightBlue","interopDefault","a","__esModule","default","value","exportAll","source","dest","keys","key","prototype","hasOwnProperty","enumerable","destName","strokeWeight$1","textSize$1","nodeRadius","drawNode","epsilon","_p5Js","fillColor","d","theta","cos","sin","prim","strokeColor"],"version":3,"file":"DirectedGraphVis.js.map"}